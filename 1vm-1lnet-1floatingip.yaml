heat_template_version: 2013-05-23

description: >
   A simple Heat template that creates a VM, hooks it up to a logical network
   and associates a floating ip from an external network to the VM.

parameters:

  external_network_id:
    type: string
    label: ext-net
    description: UUID of a Neutron external network
    default: fdb92e61-75e4-47ef-9b74-557af5b6147d

  flavor_name:
    type: string
    label: flavor name
    description: Name of the flavor to be used for the instances.
    default: m1.small

  image_name:
    type: string
    label: image name
    description: Name of the image from which to create the instances.
    default: ubuntu-14.04-server-amd64

  keypair:
    type: string
    label: keypair
    description: The keypair that will be used for the instances

  dns1:
    type: string
    label: DNS nameserver 1
    description: First DNS Server
    default: "8.8.8.8"

  dns2:
    type: string
    label: DNS nameserver 2
    description: Second DNS Server (Optional)
    default: "8.8.4.4"

resources:
   # Create the logical network
   lnet_1:
      type: OS::Neutron::Net
      properties:
         admin_state_up: true
         name: lnet_1

   subnet_1:
      type: OS::Neutron::Subnet
      properties:
         name: subnet_1
         cidr: 10.10.10.0/24
         dns_nameservers: [ { get_param: dns1 },{ get_param: dns2 } ]
         enable_dhcp: true
         gateway_ip: 10.10.10.1
         network_id: { get_resource: lnet_1 }

   # Create the logical router
   router_1:
      type: OS::Neutron::Router
      properties:
         admin_state_up: true
         name: router_1
   router_1_gw:
      type: OS::Neutron::RouterGateway
      properties:
         network_id: { get_param: external_network_id }
         router_id: { get_resource: router_1 }
   router1_int1:
      type: OS::Neutron::RouterInterface
      properties:
         router_id: { get_resource: router_1 }
         subnet_id: { get_resource: subnet_1 }

   instance1_port1:
      type: OS::Neutron::Port
      properties:
         admin_state_up: true
         network_id: { get_resource: lnet_1 }
         security_groups:
            - default

   # Create the instance
   instance1:
      type: OS::Nova::Server
      properties:
         key_name: { get_param: keypair }
         name: instance1
         image: { get_param: image_name }
         flavor:  { get_param: flavor_name }
         networks:
            - port: { get_resource: instance1_port1 }

   # Assign the floating IP to the instance
   instance1_floating_ip:
      type: OS::Neutron::FloatingIP
      properties:
         floating_network_id: { get_param: external_network_id }
         port_id: { get_resource: instance1_port1 }

outputs:
   instance1_private_ip:
      description: Fixed IP address of instance1 on the private network.
      value: { get_attr: [ instance1, first_address] }
   instance1_floating_ip:
      description: Floating IP address of instance1 on external network.
      value: { get_attr: [ instance1_floating_ip, floating_ip_address] }
